# Generated by Django 3.0.5 on 2020-06-21 02:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_type', models.CharField(choices=[('c', 'Cardio'), ('s', 'Strength')], max_length=1)),
                ('short_name', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('mechanics', models.CharField(choices=[('c', 'Compound'), ('i', 'Isolated')], max_length=1, null=True)),
                ('force', models.CharField(choices=[('p', 'Pull'), ('q', 'Push'), ('s', 'Static')], max_length=1, null=True)),
                ('modality', models.CharField(choices=[('f', 'Free weights'), ('c', 'Cable'), ('m', 'Machine')], max_length=1, null=True)),
                ('section', models.CharField(choices=[('u', 'Upper'), ('l', 'Lower'), ('c', 'Core')], max_length=1, null=True)),
                ('muscle', models.CharField(blank=True, max_length=200, null=True)),
                ('level', models.CharField(choices=[('b', 'Beginner'), ('i', 'Intermediate'), ('a', 'Advanced')], max_length=1, null=True)),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(blank=True, help_text='Enter the workout plan templates short name (ex: PPL, SS, SL)', max_length=200)),
                ('name', models.CharField(help_text='Enter the workout plan templates name (ex: Push Pull Legs, Starting Strength)', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=400, null=True)),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=False)),
                ('parent_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.Plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlanSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the workout plan session templates name (ex: Push, Pull, Legs, Upper, Lower, A, B)', max_length=200)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='workouts.Plan')),
            ],
        ),
        migrations.CreateModel(
            name='PlanSessionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=200)),
                ('plan_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='workouts.PlanSession')),
            ],
        ),
        migrations.CreateModel(
            name='PlanSessionGroupExercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('number_of_sets', models.PositiveIntegerField()),
                ('repetition_type', models.CharField(choices=[('s', 'Standard'), ('r', 'Range'), ('f', 'To Failure'), ('a', 'As Many Repetitions as Possible'), ('n', 'None')], max_length=1, null=True)),
                ('number_of_repetitions', models.PositiveIntegerField(null=True)),
                ('number_of_repetitions_up_to', models.PositiveIntegerField(null=True)),
                ('speed_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('a', 'As Fast as Possible'), ('p', 'Use working parameter')], max_length=1, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('speed_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range')], max_length=1, null=True)),
                ('vo2max', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('time', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_weight_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_distance_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_time_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_speed_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('speed_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('distance_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('time_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('plan_session_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='workouts.PlanSessionGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanSessionGroupWarmUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('number_of_sets', models.PositiveIntegerField()),
                ('repetition_type', models.CharField(choices=[('s', 'Standard'), ('r', 'Range'), ('f', 'To Failure'), ('a', 'As Many Repetitions as Possible'), ('n', 'None')], max_length=1, null=True)),
                ('number_of_repetitions', models.PositiveIntegerField(null=True)),
                ('number_of_repetitions_up_to', models.PositiveIntegerField(null=True)),
                ('speed_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('a', 'As Fast as Possible'), ('p', 'Use working parameter')], max_length=1, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('speed_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range')], max_length=1, null=True)),
                ('vo2max', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('time', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_weight_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_distance_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_time_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_speed_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('speed_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('distance_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('time_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('plan_session_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warmups', to='workouts.PlanSessionGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('notes', models.TextField(null=True)),
                ('status', models.CharField(choices=[('p', 'In progress'), ('f', 'Finished')], default='p', max_length=1)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.Plan')),
                ('plan_session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.PlanSession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('name', models.CharField(max_length=200, null=True)),
                ('plan_session_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.PlanSessionGroup')),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='workouts.Workout')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('start', models.DateTimeField(null=True)),
                ('end', models.DateTimeField(null=True)),
                ('repetition_type', models.CharField(choices=[('s', 'Standard'), ('r', 'Range'), ('f', 'To Failure'), ('a', 'As Many Repetitions as Possible'), ('n', 'None')], max_length=1, null=True)),
                ('expected_number_of_repetitions', models.PositiveIntegerField(null=True)),
                ('expected_number_of_repetitions_up_to', models.PositiveIntegerField(null=True)),
                ('number_of_repetitions', models.PositiveIntegerField(null=True)),
                ('in_progress', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('working_weight_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('expected_weight', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('speed_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('a', 'As Fast as Possible'), ('p', 'Use working parameter')], max_length=1, null=True)),
                ('expected_speed', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_speed_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range')], max_length=1, null=True)),
                ('expected_vo2max', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_vo2max_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('expected_distance', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_distance_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('expected_time', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_time_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_distance_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_time_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_speed_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('tracking', models.BooleanField(null=True)),
                ('weight_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('speed_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('distance_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('time_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_weight_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_speed_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_distance_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_time_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('plan_session_group_activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.PlanSessionGroupExercise')),
                ('workout_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sets', to='workouts.WorkoutGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutWarmUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('start', models.DateTimeField(null=True)),
                ('end', models.DateTimeField(null=True)),
                ('repetition_type', models.CharField(choices=[('s', 'Standard'), ('r', 'Range'), ('f', 'To Failure'), ('a', 'As Many Repetitions as Possible'), ('n', 'None')], max_length=1, null=True)),
                ('expected_number_of_repetitions', models.PositiveIntegerField(null=True)),
                ('expected_number_of_repetitions_up_to', models.PositiveIntegerField(null=True)),
                ('number_of_repetitions', models.PositiveIntegerField(null=True)),
                ('in_progress', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('working_weight_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('expected_weight', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('speed_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('a', 'As Fast as Possible'), ('p', 'Use working parameter')], max_length=1, null=True)),
                ('expected_speed', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_speed_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range')], max_length=1, null=True)),
                ('expected_vo2max', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_vo2max_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('vo2max', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('expected_distance', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_distance_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time_type', models.CharField(choices=[('n', 'None'), ('s', 'Standard'), ('r', 'Range'), ('p', 'Parameter')], max_length=1, null=True)),
                ('expected_time', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('expected_time_up_to', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('time', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_distance_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_time_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('working_speed_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('tracking', models.BooleanField(null=True)),
                ('weight_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('speed_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('distance_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_weight_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('time_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_speed_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_distance_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('plan_time_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('plan_session_group_activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workouts.PlanSessionGroupWarmUp')),
                ('workout_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warmups', to='workouts.WorkoutGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutWarmUpPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('altitude', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('heading', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('latitude', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('longitude', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('timestamp', models.IntegerField(null=True)),
                ('workout_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='workouts.WorkoutWarmUp')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutSetPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('altitude', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('heading', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('latitude', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('longitude', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=9, null=True)),
                ('timestamp', models.IntegerField(null=True)),
                ('workout_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='workouts.WorkoutSet')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkingParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_value', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('parameter_type', models.CharField(choices=[('w', 'Weight'), ('d', 'Distance'), ('t', 'Time'), ('s', 'Speed')], max_length=1)),
                ('unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('previous_parameter_value', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('previous_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('manually_changed', models.BooleanField(default=False)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_parameters', to='workouts.Workout')),
            ],
        ),
        migrations.CreateModel(
            name='UserBioData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('weight', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('weight_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('height', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('height_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('body_fat_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('water_weight_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('muscle_mass_percentage', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('bone_mass_weight', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('bone_mass_weight_unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlanSessionProgressionStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage_increase', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('parameter_type', models.CharField(choices=[('w', 'Weight'), ('d', 'Distance'), ('t', 'Time'), ('s', 'Speed')], max_length=1)),
                ('parameter_increase', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('mechanics', models.CharField(choices=[('c', 'Compound'), ('i', 'Isolated')], max_length=1, null=True)),
                ('force', models.CharField(choices=[('p', 'Pull'), ('q', 'Push'), ('s', 'Static')], max_length=1, null=True)),
                ('modality', models.CharField(choices=[('f', 'Free weights'), ('c', 'Cable'), ('m', 'Machine')], max_length=1, null=True)),
                ('section', models.CharField(choices=[('u', 'Upper'), ('l', 'Lower'), ('c', 'Core')], max_length=1, null=True)),
                ('progression_type', models.CharField(choices=[('e', 'By Exercise'), ('c', 'By Characteristics')], max_length=1, null=True)),
                ('exercise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('plan_session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='progressions', to='workouts.PlanSession')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanSessionGroupProgressionStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage_increase', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('parameter_type', models.CharField(choices=[('w', 'Weight'), ('d', 'Distance'), ('t', 'Time'), ('s', 'Speed')], max_length=1)),
                ('parameter_increase', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('mechanics', models.CharField(choices=[('c', 'Compound'), ('i', 'Isolated')], max_length=1, null=True)),
                ('force', models.CharField(choices=[('p', 'Pull'), ('q', 'Push'), ('s', 'Static')], max_length=1, null=True)),
                ('modality', models.CharField(choices=[('f', 'Free weights'), ('c', 'Cable'), ('m', 'Machine')], max_length=1, null=True)),
                ('section', models.CharField(choices=[('u', 'Upper'), ('l', 'Lower'), ('c', 'Core')], max_length=1, null=True)),
                ('progression_type', models.CharField(choices=[('e', 'By Exercise'), ('c', 'By Characteristics')], max_length=1, null=True)),
                ('exercise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('plan_session_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='progressions', to='workouts.PlanSessionGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanProgressionStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage_increase', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('parameter_type', models.CharField(choices=[('w', 'Weight'), ('d', 'Distance'), ('t', 'Time'), ('s', 'Speed')], max_length=1)),
                ('parameter_increase', models.DecimalField(decimal_places=5, max_digits=10, null=True)),
                ('unit', models.IntegerField(choices=[(1, 'Kilogram'), (2, 'Pound'), (3, 'Centimeter'), (4, 'Feet'), (5, 'Kilometer'), (6, 'Mile'), (7, 'Minute'), (8, 'Meter'), (9, 'Second'), (10, 'Yard'), (11, 'Kmh'), (12, 'Mph')], null=True)),
                ('mechanics', models.CharField(choices=[('c', 'Compound'), ('i', 'Isolated')], max_length=1, null=True)),
                ('force', models.CharField(choices=[('p', 'Pull'), ('q', 'Push'), ('s', 'Static')], max_length=1, null=True)),
                ('modality', models.CharField(choices=[('f', 'Free weights'), ('c', 'Cable'), ('m', 'Machine')], max_length=1, null=True)),
                ('section', models.CharField(choices=[('u', 'Upper'), ('l', 'Lower'), ('c', 'Core')], max_length=1, null=True)),
                ('progression_type', models.CharField(choices=[('e', 'By Exercise'), ('c', 'By Characteristics')], max_length=1, null=True)),
                ('exercise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='workouts.Exercise')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progressions', to='workouts.Plan')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
