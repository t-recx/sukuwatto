# Generated by Django 3.0.5 on 2020-10-01 21:26

from django.db import migrations

def migrate_to_muscle_exercise(apps, schema_editor):
    Exercise = apps.get_model('workouts', 'Exercise')
    Muscle = apps.get_model('workouts', 'Muscle')
    MuscleExercise = apps.get_model('workouts', 'MuscleExercise')

    obliques = Muscle.objects.get(name='Obliques')
    quadriceps = Muscle.objects.get(name='Quadriceps')
    rectus_abdominis = Muscle.objects.get(name='Rectus Abdominis')
    lat_dorsi = Muscle.objects.get(name='Latissimus Dorsi')
    rhomboids = Muscle.objects.get(name='Rhomboids')
    biceps = Muscle.objects.get(name='Biceps Brachii')
    gastro = Muscle.objects.get(name='Gastrocnemius')
    soleus = Muscle.objects.get(name='Soleus')
    pectoralis = Muscle.objects.get(name='Pectoralis Major')
    hamstrings = Muscle.objects.get(name='Hamstrings')
    erector = Muscle.objects.get(name='Erector Spinae')
    triceps = Muscle.objects.get(name='Triceps Brachii')
    infra = Muscle.objects.get(name='Infraspinatus')
    delt_lateral = Muscle.objects.get(name='Deltoid Lateral')
    trap_upper = Muscle.objects.get(name='Trapezius Upper Fibers')
    delt_anterior = Muscle.objects.get(name='Deltoid Anterior')
    delt_posterior = Muscle.objects.get(name='Deltoid Posterior')

    for exercise in Exercise.objects.all():
        if exercise.muscle and len(exercise.muscle) > 0:
            if exercise.muscle == 'Abdominals - Lower':
                create_muscle_exercise(exercise, rectus_abdominis, MuscleExercise)
            if exercise.muscle == 'Abdominals - Obliques':
                create_muscle_exercise(exercise, obliques, MuscleExercise)
            if exercise.muscle == 'Abdominals - Total':
                create_muscle_exercise(exercise, rectus_abdominis, MuscleExercise)
            if exercise.muscle == 'Abdominals - Upper':
                create_muscle_exercise(exercise, rectus_abdominis, MuscleExercise)
            if exercise.muscle == 'Back - Latissimus Dorsi':
                create_muscle_exercise(exercise, lat_dorsi, MuscleExercise)
            if exercise.muscle == 'Back - Lat.Dorsi/Rhomboids':
                create_muscle_exercise(exercise, rhomboids, MuscleExercise)
            if exercise.muscle == 'Biceps':
                create_muscle_exercise(exercise, biceps, MuscleExercise)
            if exercise.muscle == 'Calves - Gastrocnemius':
                create_muscle_exercise(exercise, gastro, MuscleExercise)
            if exercise.muscle == 'Calves - Soleus':
                create_muscle_exercise(exercise, soleus, MuscleExercise)
            if exercise.muscle == 'Chest - Pectoralis' or exercise.name == 'Pectoral':
                create_muscle_exercise(exercise, pectoralis, MuscleExercise)
            if exercise.muscle == 'Legs - Hamstrings' or exercise.muscle == 'Hamstrings':
                create_muscle_exercise(exercise, hamstrings, MuscleExercise)
            if exercise.muscle == 'Legs - Quadriceps' or exercise.muscle == 'Quads':
                create_muscle_exercise(exercise, quadriceps, MuscleExercise)
            if exercise.muscle == 'Lower Back - Erector Spinae':
                create_muscle_exercise(exercise, erector, MuscleExercise)
            if exercise.muscle == 'Shoulders - Rotator Cuff':
                create_muscle_exercise(exercise, infra, MuscleExercise)
            if exercise.muscle == 'Triceps':
                create_muscle_exercise(exercise, triceps, MuscleExercise)
            if exercise.muscle == 'Shoulders - Delts/Traps':
                if exercise.name == 'Single-Arm Cable Lateral Raise' or 'Lateral' in exercise.name:
                    create_muscle_exercise(exercise, delt_lateral, MuscleExercise)
                elif exercise.name == 'Dumbbell Shrug' or exercise.name == 'Barbell Shrug':
                    create_muscle_exercise(exercise, trap_upper, MuscleExercise)
                elif 'ress' in exercise.name or 'Front Raise' in exercise.name or exercise.name == 'Front Plate Raise':
                    create_muscle_exercise(exercise, delt_anterior, MuscleExercise)
                elif 'Rear Delt' in exercise.name or exercise.name == 'Pec Deck Real Delt Extensions':
                    create_muscle_exercise(exercise, delt_posterior, MuscleExercise)
                elif exercise.name == 'Lying Dumbbell External Rotation':
                    create_muscle_exercise(exercise, infra, MuscleExercise)


def create_muscle_exercise(exercise, muscle, MuscleExercise):
    me = MuscleExercise()
    me.exercise = exercise
    me.role = 't'
    me.muscle = muscle
    me.save()


class Migration(migrations.Migration):

    dependencies = [
        ('workouts', '0034_auto_20201001_2124'),
    ]

    operations = [
        # migrations.RunPython(migrate_to_muscle_exercise),
    ]
