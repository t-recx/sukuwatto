version: '3.8'

services:
  wsgi:
    build: 
      context: ./backend/
      dockerfile: ../docker/django/Dockerfile
    command: gunicorn sqtrex.wsgi:application --log-file=- --bind 0.0.0.0:8000
    expose:
      - 8000
    volumes:
      - media_volume:/home/app/web/media
    env_file:
      - ./.env.prod
    depends_on:
      - db
    restart: always
  asgi:
    build: 
      context: ./backend/
      dockerfile: ../docker/django/Dockerfile
    command: daphne --port 8001 --bind 0.0.0.0 sqtrex.asgi:application
    expose:
      - 8001
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
    restart: always
  huey:
    build: 
      context: ./backend/
      dockerfile: ../docker/django/Dockerfile
    command: python manage.py run_huey
    env_file:
      - ./.env.prod
    depends_on:
      - redis
    restart: always
  db:
    image: postgres:12.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    restart: always
  frontend:
    build:
      context: ./frontend/
      dockerfile: ../docker/frontend/Dockerfile
    volumes:
      - frontend_data:/usr/src/app/www/frontend
  frontend-android:
    build:
      context: ./frontend/
      dockerfile: ../docker/frontend-android/Dockerfile
    volumes:
      - frontend-android_data:/usr/src/app/www/frontend-android
  nginx:
    build: ./docker/nginx
    volumes:
      - frontend_data:/usr/src/app/www/frontend
      - frontend-android_data:/usr/src/app/www/frontend-android
      - media_volume:/home/app/web/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - frontend
      - frontend-android
      - wsgi
      - asgi
      - certbot
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  redis:
    image: redis:6
    expose: 
      - 6379
    restart: always

volumes:
  postgres_data:
  frontend_data:
  frontend-android_data:
  media_volume:
